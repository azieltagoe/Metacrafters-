// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract Azielcoin {
    string public tokenName = "Aziel";
    string public tokenSymbol = "AZL";
    uint256 public totalSupply;

    mapping(address => uint256) public balances;

    function mint(address account, uint256 value) external {
        totalSupply += value;
        balances[account] += value;
    }

    function burn(address account, uint256 value) public {
        require(balances[account] >= value, "Insufficient balance to burn");
        totalSupply -= value;
        balances[account] -= value;
    }

    function transfer(address to, uint256 value) public returns (bool) {
        require(balances[msg.sender] >= value, "Insufficient balance for transfer");
        balances[msg.sender] -= value;
        balances[to] += value;
        emit Transfer(msg.sender, to, value);
        return true;
    }

}
